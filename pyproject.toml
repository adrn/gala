[project]
name = "gala"
authors = [
    {name = "Adrian Price-Whelan", email = "adrianmpw@gmail.com"},
]
description = "Galactic dynamics in Python"
readme = "README.rst"
requires-python = ">=3.10"
keywords = ["astronomy", "dynamics"]
license.file = "LICENSE"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python",
    "Topic :: Scientific/Engineering :: Astronomy"
]
dependencies = [
    "numpy>=1.26.4",
    "scipy>=1.12",
    "astropy>=6.0",
    "pyyaml",
    "cython>=0.29"
]
dynamic = ["version"]

[tool.setuptools.dynamic]
version = {attr = "gala.__version__"}

[project.urls]
Documentation = "https://gala.adrian.pw"
Repository = "https://github.com/adrn/gala.git"

[project.optional-dependencies]
shared = [
    "matplotlib",
    "numexpr",
    "h5py",
    "tqdm",
]
test = [
    "gala[shared]",
    "pytest",
    "pytest-astropy",
]
extra = [
    "galpy",
    "sympy",
    "twobody",
    "scipy<1.15" # TODO: temporary, until galpy fixes incompatibility
]
docs = [
    "gala[shared,extra]",
    "numpydoc",
    "ipykernel",
    "jupyter-client",
    "nbsphinx",
    "ipython_genutils",
    "pydata_sphinx_theme",
    "sphinx",
    "sphinxcontrib-bibtex",
    "sphinx-astrorefs",
    "sphinx_automodapi",
    "sphinx_astropy",
    "rtds_action",
    "requests"
]
tutorials = [
    "gala[shared,extra]",
    "IPython",
    "nbconvert",
    "ipython_genutils",
    "jupyter_client",
    "ipykernel",
    "jupytext",
    "pyia>=1.4",
    "astroquery"
]
dev = [
    "gala[test, extra, docs, tutorials]",
    "pre-commit"
]

[build-system]
requires = [
    "setuptools>=77.0.3",
    "wheel",
    "setuptools_scm",
    "extension-helpers==1.*",
    "numpy>=2.0",
    "cython",
    "pybind11"
]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["gala", "gala.*"]

[tool.setuptools.package-data]
"*" = ["*.c"]
"gala" = ["extra_compile_macros.h", "cconfig.pyx", "*.c"]
"gala.coordinates.tests" = ["*.txt", "*.npy", "SgrCoord_data", "*.csv"]
"gala.dynamics" = ["*/*.pyx", "*/*.pxd", "*/*.h", "nbody/nbody_helper.h"]
"gala.integrate" = [
    "*/*.pyx",
    "*/*.pxd",
    "cyintegrators/*.c",
    "cyintegrators/dopri/*.c",
    "cyintegrators/dopri/*.h"
]
"gala.potential" = [
    "src/funcdefs.h",
    "potential/src/cpotential.h",
    "frame/src/cframe.h",
    "*/*.pyx",
    "*/*.pxd",
    "scf/tests/data/*",
    "potential/tests/*.yml",
    "potential/tests/*.pot",
    "potential/tests/*.fits"
]

[tool.setuptools_scm]
version_file = "gala/_version.py"
local_scheme = "no-local-version"  # So that uploads to test.pypi.org work

[tool.pytest.ini_options]
testpaths = ["gala", "docs"]
astropy_header = true
#doctest_plus = "enabled"
text_file_format = "rst"
addopts = ["--doctest-rst", "--ignore-glob=*/setup_package.py"]
norecursedirs = [
    "docs/tutorials/*",
    "docs/_*"
]
doctest_norecursedirs = [
    "docs/tutorials/*",
    "docs/_*"
]

[tool.coverage.run]
omit = [
    "gala/conftest*",
    "gala/cython_version*",
    "gala/setup_package*",
    "gala/*/setup_package*",
    "gala/*/*/setup_package*",
    "gala/tests/*",
    "gala/*/tests/*",
    "gala/*/*/tests/*",
    "gala/version*",
    "gala/dynamics/_genfunc/*",
    "gala/coordinates/poincarepolar.py",
    "gala/coordinates/velocity_frame_transforms.py",
    "*/gala/conftest*",
    "*/gala/cython_version*",
    "*/gala/setup_package*",
    "*/gala/*/setup_package*",
    "*/gala/*/*/setup_package*",
    "*/gala/tests/*",
    "*/gala/*/tests/*",
    "*/gala/*/*/tests/*",
    "*/gala/version*",
    "*/gala/dynamics/_genfunc/*",
    "*/gala/coordinates/poincarepolar.py",
    "*/gala/coordinates/velocity_frame_transforms.py",
]

[tool.coverage.report]
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    # Don't complain about packages we have installed
    "except ImportError",
    # Don't complain if tests don't hit assertions
    "raise AssertionError",
    "raise NotImplementedError",
    # Don't complain about script hooks
    "def main\\(.*\\):",
    # Ignore branches that don't pertain to this version of Python
    "pragma: py{ignore_python_version}",
    # Don't complain about IPython completion helper
    "def _ipython_key_completions_"
]

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.ruff]
line-length = 88
# src = ["src"]

[tool.ruff.lint]
extend-select = [
  "B",        # flake8-bugbear
  "I",        # isort
  "ARG",      # flake8-unused-arguments
  "C4",       # flake8-comprehensions
  "EM",       # flake8-errmsg
  "ICN",      # flake8-import-conventions
  "G",        # flake8-logging-format
  "PGH",      # pygrep-hooks
  "PIE",      # flake8-pie
  "PL",       # pylint
  "PT",       # flake8-pytest-style
  "PTH",      # flake8-use-pathlib
  "RET",      # flake8-return
  "RUF",      # Ruff-specific
  "SIM",      # flake8-simplify
  "T20",      # flake8-print
  "UP",       # pyupgrade
  "YTT",      # flake8-2020
  "EXE",      # flake8-executable
  "NPY",      # NumPy specific rules
  "PD",       # pandas-vet
]
ignore = [
  "PLC0206",  # Extracting value from dictionary without calling `.items()`
  "PLR09",    # Too many <...>
  "PLR2004",  # Magic value used in comparison
  "ISC001",   # Conflicts with formatter
  "B905",     # zip() without explicit strict
  "E741",     # Ambiguous variable name
  "PLW2901",  # `for` loop variable `p` overwritten by assignment target
  "PD901",    # Avoid using the generic variable name `df` for DataFrames
  "E731",     # Do not assign a lambda expression, use a def
  # TODO: fix these and remove from ignore
  "EM101", "EM102",
  "PT011", "PT012",
  "ARG001", "ARG002", "ARG005",
  "PTH",
  "B028",
  "RUF012",
  "PLC0415",
  "PLW1641",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403"]
"test*.py" = ["F841", "PLC0415"]
"conftest.py" = ["PLC0415"]
"docs/*" = ["PLC0415"]
"docs/tutorials/*" = ["E703", "RUF001"]
"**/tests/*.py"  = ["NPY002", "RUF012", "T201", "B018", "B007", "PLC0415"]
"setup.py" = ["T201", "E402"]
"docs/conf.py" = ["T201"]
"docs/tutorials/*.py" = ["B018", "E402"]
"gala/dynamics/actionangle/_genfunc/**/*" = ["ALL"]
