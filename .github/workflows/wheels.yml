name: Wheels
on:
  release:
    types:
      - published
      - edited
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_nix_wheels:
    name: Build wheels on ${{ matrix.os }} - ${{ matrix.python }}
    runs-on: ${{ matrix.os }}
    if: github.event.pull_request.draft == false && !contains(github.event.pull_request.labels.*.name, 'docs only')
    strategy:
      fail-fast: false
      matrix:
        # Building wheels on linux takes too much time: split wheels into multiple runs
        python:
          - "cp39-* cp310-*"
          - "cp311-* cp312-*"
        os:
          - "macos-latest"
          - "ubuntu-latest"
        linux_archs:
          # only used on linux
          - "x86_64"
          # - "aarch64"  # TODO: disabled beause they are too slow (done w/ emulation)
        macos_archs:
          # only used on mac
          - "x86_64"
          - "arm64"

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # - name: Set up QEMU  # For emulation on Linux
      #   if: runner.os == 'Linux'
      #   uses: docker/setup-qemu-action@v3
      #   with:
      #     platforms: all

      # Mac:
      - name: Setup Mac
        if: runner.os == 'macOS'
        run: |
          brew install gsl

      # Ubuntu:
      - name: Setup Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get install gsl-bin libgsl0-dev

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
        env:
          CIBW_ARCHS_LINUX: ${{ matrix.linux_archs }}
          CIBW_ARCHS_MACOS: ${{ matrix.macos_archs }}
          CIBW_BUILD: ${{ matrix.python }}
          CIBW_SKIP: "*-win32 *musllinux* pp* *-manylinux_i686"

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.python-version }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: "3.11"

      - name: Build sdist
        run: |
          sudo apt-get update
          sudo apt-get install gsl-bin libgsl0-dev
          pip install build
          python -m build -s .

      - uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist/*.tar.gz

  test_upload_pypi:
    needs: [build_nix_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment:
      name: release
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist

      - uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: wheels-*

      - name: Publish package distributions to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/


  upload_pypi:
    needs: [build_nix_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    environment:
      name: release
      url: https://pypi.org/p/gala
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: artifact
          path: dist

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
