name: Wheels
on:
  release:
    types:
      - published
      - edited
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_nix_wheels:
    name: Build wheels on ${{ matrix.os }} - ${{ matrix.python[1] }}
    runs-on: ${{ matrix.os }}
    if: github.event.pull_request.draft == false && !contains(github.event.pull_request.labels.*.name, 'docs only')
    strategy:
      fail-fast: false
      matrix:
        # Building wheels on linux takes too much time: split wheels into multiple runs
        python:
          - ["1", "cp310-*"]
          - ["2", "cp311-*"]
          - ["3", "cp312-*"]
        os:
          - "macos-14"
          - "ubuntu-latest"

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.20.0
        env:
          CIBW_ARCHS_LINUX: "x86_64"
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_BUILD: ${{ matrix.python[1] }}
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
          CIBW_MANYLINUX_AARCH64_IMAGE: manylinux_2_28
          CIBW_SKIP: "*-win32 *musllinux* pp* *i686"
          CIBW_BEFORE_ALL_LINUX: dnf install -y gsl gsl-devel || apt-get install gsl-bin libgsl0-dev
          CIBW_BEFORE_ALL_MACOS: brew install gsl pipx
          MACOSX_DEPLOYMENT_TARGET: 14.0

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.python[0] }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: "3.11"

      - name: Build sdist
        run: |
          sudo apt-get update
          sudo apt-get install gsl-bin libgsl0-dev
          pip install build
          python -m build -s .

      - uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist/*.tar.gz

  test_upload_pypi:
    needs: [build_nix_wheels, build_sdist]
    # Only test upload to pypi on push to main:
    environment: release
    permissions:
      id-token: write
    runs-on: ubuntu-latest
    if:
      github.repository_owner == 'adrn' && github.event_name == 'push' &&
      github.ref == 'refs/heads/main'
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels*
          path: dist
          merge-multiple: true

      - name: Upload package to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/


  upload_pypi:
    needs: [build_nix_wheels, build_sdist]
    runs-on: ubuntu-latest
    if:
      github.event_name == 'release' &&
      (github.event.action == 'published' || github.event.action == 'edited')
    environment:
      name: release
      url: https://pypi.org/p/gala
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels*
          path: dist
          merge-multiple: true

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
